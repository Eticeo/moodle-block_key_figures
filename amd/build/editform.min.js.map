{"version":3,"file":"editform.min.js","sources":["../src/editform.js"],"sourcesContent":["/**\n * Function call in php\n *\n * @param instid int : id of block instance\n * @param waitModal bool : true if we need to wait modal to call js. False if not (ex: load param is tab)\n */\nexport const init = (instid, waitModal) => {\n    // Lines to give window functions needed.\n    window.block_key_figures_manage_lines = block_key_figures_manage_lines;\n    window.block_key_figures_change_line = block_key_figures_change_line;\n\n    if (waitModal) {\n        // Call specific function.\n        block_key_figures_waitmodal(instid);\n    } else {\n        // Go on.\n        block_key_figures_on_open();\n    }\n};\n\n/**\n * Waits for the modal to be opened and then runs the init function\n *\n * @param instid int : id of block instance\n */\nfunction block_key_figures_waitmodal(instid) {\n    // We need to wait specific element (which is in modal) to run init.\n    block_key_figures_waitForElm(\"input[name='blockid'][value='\" + instid + \"']\").then((elm) => {\n        // Element is here, run init.\n        block_key_figures_on_open();\n\n        // And now wait modal closed to rerun the waitmodal.\n        block_key_figures_waitdestroymodal(instid);\n    });\n}\n\n/**\n * Needed in case we open, close then reopen modal\n *\n * @param instid int : id of block instance\n */\nfunction block_key_figures_waitdestroymodal(instid) {\n    block_key_figures_waitForNotElm(\"input[name='blockid'][value='\" + instid + \"']\").then((elm) => {\n        block_key_figures_on_open();\n        block_key_figures_waitmodal(instid);\n    });\n}\n\n/**\n * Function to run when the modal is opened\n */\nfunction block_key_figures_on_open() {\n    document.querySelectorAll('[id^=\"id_config_block_number\"]').forEach(function(element) {\n        block_key_figures_manage_lines(element, 'id_configheader');\n\n        element.addEventListener('change', function() {\n            block_key_figures_manage_lines(element, 'id_configheader');\n        });\n    });\n\n    document.querySelectorAll('[id^=\"id_config_line_number_\"]').forEach(function(element) {\n        block_key_figures_change_line(element);\n\n        element.addEventListener('change', function() {\n            block_key_figures_change_line(element);\n        });\n    });\n}\n\n/**\n * Function wait specific element are NOT here to continue\n *\n * @param selector string: the specific element selector\n * @returns {Promise}\n */\nfunction block_key_figures_waitForNotElm(selector) {\n    return new Promise(resolve => {\n        if (!document.querySelector(selector)) {\n            return resolve(document.querySelector(selector));\n        }\n\n        const observer = new MutationObserver(mutations => {\n            if (!document.querySelector(selector)) {\n                resolve(document.querySelector(selector));\n                observer.disconnect();\n            }\n        });\n\n        observer.observe(document.body, {\n            childList: true,\n            subtree: true\n        });\n    });\n}\n\n/**\n * Function wait specific element are here to continue\n *\n * @param selector string: the specific element selector\n * @returns {Promise}\n */\nfunction block_key_figures_waitForElm(selector) {\n    return new Promise(resolve => {\n        if (document.querySelector(selector)) {\n            return resolve(document.querySelector(selector));\n        }\n\n        const observer = new MutationObserver(mutations => {\n            if (document.querySelector(selector)) {\n                resolve(document.querySelector(selector));\n                observer.disconnect();\n            }\n        });\n\n        observer.observe(document.body, {\n            childList: true,\n            subtree: true\n        });\n    });\n}\n\n/**\n * Check the current number of block and hide the blocks settings that we don't need,\n * and show that we need\n *\n * @param selectSelector    | string or object, selector of the number of line to show\n * @param targetId          | string id of the lines to show/hide\n */\nfunction block_key_figures_manage_lines(element, targetId) {\n    var blockNumber = parseInt(element.value);\n\n    document.querySelectorAll('[id^=\"' + targetId + '\"]').forEach(function(element) {\n        let match = element.id.match(new RegExp(targetId + \"(\\\\d+)_\"));\n        if (match) {\n            let num = parseInt(match[1]);\n            if (num > blockNumber) {\n                element.style.display = 'none';\n            } else {\n                element.style.display = 'block';\n            }\n        }\n    });\n}\n\n/**\n * Function to manage the lines of the block key figures\n *\n * @param object   | object\n */\nfunction block_key_figures_change_line(object) {\n    var blockNum = object.id;\n    blockNum = parseInt(blockNum.replace('id_config_line_number_', ''));\n\n    block_key_figures_manage_lines(object, 'fitem_id_config_number_' + blockNum + '_');\n    block_key_figures_manage_lines(object, 'fitem_id_config_number_caption_' + blockNum + '_');\n}\n"],"names":["block_key_figures_waitmodal","instid","selector","Promise","resolve","document","querySelector","observer","MutationObserver","mutations","disconnect","observe","body","childList","subtree","then","elm","block_key_figures_on_open","block_key_figures_waitForNotElm","block_key_figures_waitdestroymodal","querySelectorAll","forEach","element","block_key_figures_manage_lines","addEventListener","block_key_figures_change_line","targetId","blockNumber","parseInt","value","match","id","RegExp","num","style","display","object","blockNum","replace","waitModal","window"],"mappings":"0JAyBSA,4BAA4BC,YA4ECC,UAAAA,SA1EL,gCAAkCD,OAAS,KA2EjE,IAAIE,SAAQC,aACXC,SAASC,cAAcJ,iBAChBE,QAAQC,SAASC,cAAcJ,iBAGpCK,SAAW,IAAIC,kBAAiBC,YAC9BJ,SAASC,cAAcJ,YACvBE,QAAQC,SAASC,cAAcJ,WAC/BK,SAASG,iBAIjBH,SAASI,QAAQN,SAASO,KAAM,CAC5BC,WAAW,EACXC,SAAS,QAzF6DC,MAAMC,MAEhFC,qCAYoChB,kBAkCHC,iBAC9B,IAAIC,SAAQC,cACVC,SAASC,cAAcJ,iBACjBE,QAAQC,SAASC,cAAcJ,iBAGpCK,SAAW,IAAIC,kBAAiBC,YAC7BJ,SAASC,cAAcJ,YACxBE,QAAQC,SAASC,cAAcJ,WAC/BK,SAASG,iBAIjBH,SAASI,QAAQN,SAASO,KAAM,CAC5BC,WAAW,EACXC,SAAS,QAhDjBI,CAAgC,gCAAkCjB,OAAS,MAAMc,MAAMC,MACnFC,4BACAjB,4BAA4BC,WAZ5BkB,CAAmClB,oBAmBlCgB,4BACLZ,SAASe,iBAAiB,kCAAkCC,SAAQ,SAASC,SACzEC,+BAA+BD,QAAS,mBAExCA,QAAQE,iBAAiB,UAAU,WAC/BD,+BAA+BD,QAAS,yBAIhDjB,SAASe,iBAAiB,kCAAkCC,SAAQ,SAASC,SACzEG,8BAA8BH,SAE9BA,QAAQE,iBAAiB,UAAU,WAC/BC,8BAA8BH,wBAgEjCC,+BAA+BD,QAASI,cACzCC,YAAcC,SAASN,QAAQO,OAEnCxB,SAASe,iBAAiB,SAAWM,SAAW,MAAML,SAAQ,SAASC,aAC/DQ,MAAQR,QAAQS,GAAGD,MAAM,IAAIE,OAAON,SAAW,eAC/CI,MAAO,KACHG,IAAML,SAASE,MAAM,IAErBR,QAAQY,MAAMC,QADdF,IAAMN,YACkB,OAEA,qBAW/BF,8BAA8BW,YAC/BC,SAAWD,OAAOL,GAGtBR,+BAA+Ba,OAAQ,2BAFvCC,SAAWT,SAASS,SAASC,QAAQ,yBAA0B,MAEe,KAC9Ef,+BAA+Ba,OAAQ,kCAAoCC,SAAW,mBApJtE,CAACpC,OAAQsC,aAEzBC,OAAOjB,+BAAiCA,+BACxCiB,OAAOf,8BAAgCA,8BAEnCc,UAEAvC,4BAA4BC,QAG5BgB"}